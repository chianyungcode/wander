generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model Destination {
  id          String   @id @default(uuid())
  name        String
  description String
  ticketPrice Int
  street      String
  city        String
  province    String
  country     String
  postalCode  String
  openHour    String
  closeHour   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  locationId  String
  location    Location @relation(fields: [locationId], references: [id])
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])
  ownerId     String
  owner       Owner    @relation(fields: [ownerId], references: [id])

  images Image[]

  @@map("destinations")
}

model Location {
  id           String        @id @default(uuid())
  city         String
  province     String
  country      String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  destinations Destination[]

  @@map("locations")
}

model Category {
  id           String        @id @default(uuid())
  name         String
  description  String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  destinations Destination[]

  @@map("categories")
}

model Owner {
  id           String        @id @default(uuid())
  name         String
  email        String
  phone        String
  address      String
  city         String
  country      String
  postalCode   String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  destinations Destination[]

  @@map("owners")
}

model Image {
  id            String      @id @default(uuid())
  url           String
  destinationId String
  destination   Destination @relation(fields: [destinationId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@map("images")
}
